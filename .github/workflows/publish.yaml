name: Publish

on:
  push:
    branches:
      - main

jobs:
  create-tag:
    name: create new tag
    runs-on: ubuntu-latest
    if: ${{ !github.event.forced }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: read tag number
        run: |
          echo "VERSION=$(.github/scripts/extract_version.sh)" >> $GITHUB_ENV
      - name: debug
        run: ls -la
      - name: debug
        run: ls -la .github
      - name: debug
        run: ls -la .github/scripts
      - name: debug
        run: .github/scripts/extract_version.sh
      - name: debug
        run: |
          if [ "${{ env.MY_ENV_VAR }}" != "0.4.0" ]; then
            echo "VERSION is empty"
            exit 1
          else
            echo "VERSION is set to ${{ env.VERSION }}"
          fi
      - name: create tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ env.VERSION }}
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}

  build:
    name: build NPM package
    runs-on: ubuntu-latest
    if: ${{ !github.event.forced }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - name: install packages
        run: npm ci
        env:
          GITHUB_TOKEN: ${{ secrets.API_PKG_PAT }}
      - name: build application
        run: npm run build-prod
      - name: upload the build artifact
        uses: actions/upload-artifact@v4
        with:
          name: kant-search-frontend
          path: dist/kant-search-frontend

  publish-docker:
    name: publish Docker image
    runs-on: ubuntu-latest
    needs: [create-tag, build]
    env:
      OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: adjust env variables
        run: |
          echo "OWNER=$(echo $OWNER | awk '{print tolower($0)}')" >> $GITHUB_ENV
      - name: download the build artifact
        uses: actions/download-artifact@v4
        with:
          name: kant-search-frontend
          path: kant-search-frontend
      - name: build Docker image
        run: |
          docker build \
            -f ./deployment/Dockerfile \
            -t ghcr.io/frhorschig/kant-search-frontend:latest \
            .
      - name: login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish docker image
        run: |
          img=ghcr.io/${{ env.OWNER }}/${{ env.REPO_NAME }}
          version=${{ needs.create-tag.outputs.new_tag }}
          docker tag  $img $img:$version
          docker tag  $img $img:latest
          docker push $img:$version
          docker push $img:latest

  publish-js:
    name: publish JavaScript files
    runs-on: ubuntu-latest
    needs: [create-tag, build]
    steps:
      - name: download the build artifact
        uses: actions/download-artifact@v4
        with:
          name: kant-search-frontend
          path: kant-search-frontend
      - name: create release
        uses: softprops/action-gh-release@v2.0.4
        with:
          tag_name: ${{ needs.create-tag.outputs.new_tag }}
          files: kant-search-frontend
          token: ${{ secrets.GITHUB_TOKEN }}
